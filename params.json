{"name":"Betools","tagline":"Useful little Python tools.","body":"### Welcome to betools.\r\n\r\nA small set of tools I've created to make Python programming a bit nicer. The main one is CmdLine, a decorator that automatically creates command-line options using argparse. Here's how you use it:\r\n\r\nfrom betools import CmdLine\r\n\r\n@CmdLine(\"t\", \"option1\")\r\ndef test():\r\n    \"\"\"\r\n    Description of option1\r\n    \"\"\"\r\n    print(\"option1\")\r\n\r\n@CmdLine(\"u\", \"option2\")\r\ndef test():\r\n    \"\"\"\r\n    Description of option2\r\n    \"\"\"\r\n    print(\"option2\")\r\n\r\n@CmdLine(\"v\", \"option3\")\r\ndef test():\r\n    \"\"\"\r\n    Description of option3\r\n    \"\"\"\r\n    print(\"option3\")\r\n\r\n\r\nif __name__ == '__main__': CmdLine.run()\r\n\r\n\"\"\" Output:\r\n+>python cmdlinedemo.py\r\nusage: cmdlinedemo.py [-h] [-t] [-u] [-v]\r\n\r\noptional arguments:\r\n  -h, --help     show this help message and exit\r\n  -t, --option1  Description of option1\r\n  -u, --option2  Description of option2\r\n  -v, --option3  Description of option3\r\n\r\nC:\\Users\\Bruce\\Dropbox\\__TIJ4-ebook\r\n+>python cmdlinedemo.py -u\r\noption2\r\n\r\nC:\\Users\\Bruce\\Dropbox\\__TIJ4-ebook\r\n+>\r\n\"\"\"\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}